{"version":3,"sources":["components/NewQuote.js","components/Quote.js","components/ShareQuote.js","components/QuoteBox.js","components/AppWrapper.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["NewQuote","props","requestNewQuote","bind","this","getNewQuote","id","style","background","themeColor","onClick","className","Component","Quote","state","error","isLoaded","quotes","fetch","then","res","json","result","console","log","setState","newQuote","message","randomInt","Math","floor","random","length","quoteAuthor","author","quoteText","text","color","ShareQuote","getShareURL","shareElement","document","getElementById","textElement","authorElement","currentAuthor","currentQuote","innerText","href","encodeURIComponent","shareLink","target","rel","margin","icon","QuoteBox","width","QuoteContainer","ShareQuoteContainer","NewQuoteContainer","AppWrapper","colors","defaultState","NEW_QUOTE","store","createStore","action","newState","Object","assign","type","randomColorIndex","mapStateToProps","connect","dispatch","AppWrapperContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+RAqBeA,EAjBf,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFR,EADvB,mDAMI,WACIC,KAAKH,MAAMI,gBAPnB,oBASI,WACI,OACI,wBAAQC,GAAG,YAAYC,MAAO,CAACC,WAAYJ,KAAKH,MAAMQ,YAAaC,QAASN,KAAKF,gBAAiBS,UAAU,MAA5G,2BAXZ,GAA8BC,aCkEfC,EAnEf,kDACI,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTC,MAAO,KACPC,UAAU,EACVC,OAAQ,IALG,EADvB,qDASI,WAAqB,IAAD,OAChBC,MAAM,+BACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACCC,QAAQC,IAAI,OAAQF,GACpB,EAAKG,SAAS,CACZT,UAAU,EACVC,OAAQK,OAOZ,SAACP,GACC,EAAKU,SAAS,CACZT,UAAU,EACVD,eA3BhB,oBAoCI,WACI,MAAoCX,KAAKU,MAAjCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAWC,EAA1B,EAA0BA,OAE1B,GADAM,QAAQC,IAAI,QAASpB,KAAKH,MAAMyB,UAC5BX,EACJ,OAAO,0CAAaA,EAAMY,WACnB,GAAKX,EAEL,CACH,IAAIY,EAAYC,KAAKC,MAAMD,KAAKE,SAAW3B,KAAKU,MAAMG,OAAOe,QACzDC,EAAchB,EAAOW,GAAWM,OAChCC,EAAYlB,EAAOW,GAAWQ,KASlC,OAPiB,MAAbD,GAA0C,IAArBA,EAAUH,QAC/BG,EAAY,0EACZF,EAAc,iBACQ,MAAfA,GAA4C,IAArBE,EAAUH,SACxCC,EAAc,WAId,gCACI,qBAAItB,UAAU,cAAcJ,MAAO,CAAC8B,MAAOjC,KAAKH,MAAMQ,YAAaH,GAAG,OAAtE,cAA8E,mBAAGK,UAAU,4BAA3F,IAA2HwB,KAC3H,oBAAGxB,UAAU,aAAaJ,MAAO,CAAC8B,MAAOjC,KAAKH,MAAMQ,YAAaH,GAAG,SAApE,eAAgF2B,QAhB5F,OAAO,8BAAK,mBAAGtB,UAAU,kCA1CjC,GAA2BC,aCuCZ0B,EAxCf,kDACI,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IACDsC,YAAc,EAAKA,YAAYpC,KAAjB,gBAFJ,EADvB,+CAMI,WACI,IAAIqC,EAAeC,SAASC,eAAetC,KAAKH,MAAMK,IAClDqC,EAAcF,SAASC,eAAe,QACtCE,EAAgBH,SAASC,eAAe,UACxCG,EAAgB,GAChBC,EAAe,GACA,MAAfH,GAAwC,MAAjBC,IACvBC,EAAgBD,EAAcG,UAC9BD,EAAeH,EAAYI,WAEX,MAAhBP,IACsB,gBAAlBpC,KAAKH,MAAMK,GACXkC,EAAaQ,KAAO,8EACpBC,mBAAmB,IAAMH,EAAe,KAAOD,GAE/CL,EAAaQ,KAAO,6FACpBC,mBAAmBJ,GACnB,YACAI,mBAAmBH,GACnB,0FAzBhB,oBA8BI,WAEI,OACI,qBAAKpC,QAASN,KAAKmC,YAAnB,SACI,mBAAGjC,GAAIF,KAAKH,MAAMK,GAAI0C,KAAM5C,KAAKH,MAAMiD,UAAWC,OAAO,SAASC,IAAI,aAAtE,SAAmF,mBAAG7C,MAAO,CAAC8B,MAAOjC,KAAKH,MAAMQ,WAAY4C,OAAQ,WAAY1C,UAAWP,KAAKH,MAAMqD,eAlCtL,GAAgC1C,aCyBjB2C,EAvBf,4JAEI,WACI,OACI,gCACI,sBAAK5C,UAAU,OAAOJ,MAAO,CAACiD,MAAO,KAArC,UACI,cAACC,EAAD,IACA,sBAAK9C,UAAU,UAAf,UACI,cAAC+C,EAAD,CAAqBpD,GAAG,cAAcgD,KAAK,8BAA8BJ,UAAW,qCAEpF,cAACQ,EAAD,CAAqBpD,GAAG,eAAegD,KAAK,iCAAiCJ,UAAU,4BACvF,cAACS,EAAD,UAKR,mBAAGhD,UAAU,WAAb,6BAhBhB,GAA8BC,aCWfgD,EAZf,4JAEI,WACI,OACI,qBAAKrD,MAAO,CAACC,WAAYJ,KAAKH,MAAMQ,YAAaE,UAAU,kBAA3D,SACI,cAAC,EAAD,CAAUL,GAAG,oBAL7B,GAAgCM,aCI1BiD,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7GC,EAAe,CACjBpC,UAAU,EACVjB,WAAY,WAEVsD,EAAY,YAmBLC,EAAQC,aAbG,WAAmC,IAAlCnD,EAAiC,uDAAzBgD,EAAcI,EAAW,uCACtDC,EAAWC,OAAOC,OAAO,GAAIvD,GACjC,OAAQoD,EAAOI,MACX,KAAKP,EACD,IAAIQ,EAAmB1C,KAAKC,MAAMD,KAAKE,SAAW8B,EAAO7B,QAGzD,OAFAmC,EAAS1D,WAAaoD,EAAOU,GAC7BJ,EAASzC,UAAYyC,EAASzC,SACvByC,EACX,QACI,OAAOA,MAMTK,EAAkB,SAAC1D,GACzB,MAAO,CAACY,SAAUZ,EAAMY,SAAUjB,WAAYK,EAAML,aAUvCkD,EAAoBc,YAAQD,GARd,SAACE,GAC5B,MAAO,CACHrE,YAAa,WACbqE,EAzBG,CACHJ,KAAMP,QA6BuBU,CAA6CzE,GACjEyD,EAAiBgB,YAAQD,EAARC,CAAyB5D,GAC1C6C,EAAsBe,YAAQD,EAARC,CAAyBnC,GAC/CqC,EAAsBF,YAAQD,EAARC,CAAyBb,GClC7CgB,MAPf,WACE,OACE,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACE,cAACW,EAAD,OCGSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAASC,eAAe,SAM1BmC,M","file":"static/js/main.5a30184a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport class NewQuote extends Component {\r\n    constructor(props) {\r\n        super(props);       \r\n        this.requestNewQuote = this.requestNewQuote.bind(this) \r\n    }\r\n\r\n    requestNewQuote(){        \r\n        this.props.getNewQuote();\r\n    }\r\n    render() {\r\n        return (\r\n            <button id=\"new-quote\" style={{background: this.props.themeColor}} onClick={this.requestNewQuote} className=\"btn\">New Quote</button>       \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default NewQuote\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport class Quote extends Component {\r\n    constructor(props) {\r\n        super(props);       \r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            quotes: []\r\n        } \r\n    }\r\n    componentDidMount() {\r\n        fetch(\"https://type.fit/api/quotes\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n              console.log('data', result);\r\n              this.setState({  \r\n                isLoaded: true,              \r\n                quotes: result\r\n              });\r\n              \r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n              this.setState({  \r\n                isLoaded: true,              \r\n                error\r\n              });\r\n            }\r\n          );\r\n       \r\n        \r\n    }\r\n   \r\n    \r\n    render() {\r\n        const { error, isLoaded,  quotes} = this.state;\r\n        console.log(\"quote\", this.props.newQuote)\r\n        if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n        return <div><i className=\"fas fa-quote-left fa-xs\"></i></div>;\r\n        } else {\r\n            let randomInt = Math.floor(Math.random() * this.state.quotes.length);            \r\n            let quoteAuthor = quotes[randomInt].author\r\n            let quoteText = quotes[randomInt].text\r\n            \r\n            if (quoteText == null || quoteText.length === 0) {\r\n                quoteText = \"Genius is one percent inspiration and ninety-nine percent perspiration.\";\r\n                quoteAuthor = \"Thomas Edison\";\r\n            } else if (quoteAuthor == null || quoteText.length === 0) {\r\n                quoteAuthor = \"Unknown\";\r\n            }                \r\n            \r\n            return (\r\n                <div>\r\n                    <h1 className=\"text-center\" style={{color: this.props.themeColor}} id=\"text\"> <i className=\"fas fa-quote-left fa-xs\"></i> {quoteText}</h1>\r\n                    <p className=\"text-right\" style={{color: this.props.themeColor}} id=\"author\">- {quoteAuthor}</p>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Quote\r\n","import React, { Component } from 'react'\r\n\r\nexport class ShareQuote extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.getShareURL = this.getShareURL.bind(this);       \r\n    }    \r\n\r\n    getShareURL() {\r\n        let shareElement = document.getElementById(this.props.id);\r\n        let textElement = document.getElementById(\"text\");\r\n        let authorElement = document.getElementById(\"author\");\r\n        let currentAuthor = \"\";\r\n        let currentQuote = \"\";\r\n        if (textElement != null && authorElement != null) {            \r\n            currentAuthor = authorElement.innerText;            \r\n            currentQuote = textElement.innerText;\r\n        }\r\n        if (shareElement != null) {\r\n            if (this.props.id === \"tweet-quote\") {\r\n                shareElement.href = 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' +\r\n                encodeURIComponent('\"' + currentQuote + '\" ' + currentAuthor)\r\n            } else {\r\n                shareElement.href = 'https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=' +\r\n                encodeURIComponent(currentAuthor) +\r\n                '&content=' +\r\n                encodeURIComponent(currentQuote) +\r\n                '&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button'\r\n            }\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        \r\n        return (            \r\n            <div onClick={this.getShareURL}>\r\n                <a id={this.props.id} href={this.props.shareLink} target=\"_blank\" rel=\"noreferrer\"><i style={{color: this.props.themeColor, margin: \"0px 2px\"}} className={this.props.icon}></i></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareQuote\r\n","import React, { Component } from 'react'\r\nimport {ShareQuoteContainer, NewQuoteContainer, QuoteContainer } from '../store'\r\n\r\n\r\nexport class QuoteBox extends Component {\r\n    \r\n    render() { \r\n        return (\r\n            <div>\r\n                <div className=\"card\" style={{width: 500}}>\r\n                    <QuoteContainer/>\r\n                    <div className=\"buttons\">\r\n                        <ShareQuoteContainer id=\"tweet-quote\" icon=\"fab fa-twitter-square fa-3x\" shareLink={\"https://twitter.com/intent/tweet\"}\r\n  />\r\n                        <ShareQuoteContainer id=\"tumblr-quote\" icon=\"fab fab fa-tumblr-square fa-3x\" shareLink=\"http://tumblr.com/share\"/>                        \r\n                        <NewQuoteContainer />\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n                <p className=\"designer\">by hezag</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default QuoteBox\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport QuoteBox from './QuoteBox';\r\n\r\nexport class AppWrapper extends Component {\r\n    \r\n    render() { \r\n        return (\r\n            <div style={{background: this.props.themeColor}} className=\"container-fluid\">\r\n                <QuoteBox id=\"quote-box\"/>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport default AppWrapper","import { createStore} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport NewQuote from './components/NewQuote';\r\nimport Quote from './components/Quote';\r\nimport ShareQuote from './components/ShareQuote';\r\nimport AppWrapper from './components/AppWrapper';\r\n\r\nconst colors = [\"#f4a261\", \"#264653\", \"#2a9d8f\", \"#e9c46a\", \"#e76f51\", \"#8ecae6\", \"#219ebc\", \"#e63946\", \"#a8dadc\", \"#457b9d\"]\r\nconst defaultState = {\r\n    newQuote: false,\r\n    themeColor: \"#8ecae6\",   \r\n};\r\nconst NEW_QUOTE = 'NEW_QUOTE';\r\nconst loadNewQuote = () => {\r\nreturn {\r\n    type: NEW_QUOTE    \r\n}\r\n};\r\nconst newQuoteReducer = (state = defaultState, action) => {\r\nlet newState = Object.assign({}, state);\r\nswitch (action.type) {\r\n    case NEW_QUOTE:\r\n        let randomColorIndex = Math.floor(Math.random() * colors.length);\r\n        newState.themeColor = colors[randomColorIndex];\r\n        newState.newQuote = !newState.newQuote;\r\n        return newState;\r\n    default:\r\n        return newState;\r\n}\r\n};\r\n  \r\nexport const store = createStore(newQuoteReducer);\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {newQuote: state.newQuote, themeColor: state.themeColor}\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n    getNewQuote: () => {\r\n    dispatch(loadNewQuote())\r\n    }\r\n}\r\n};\r\n\r\nexport const NewQuoteContainer = connect(mapStateToProps, mapDispatchToProps)(NewQuote);\r\nexport const QuoteContainer = connect(mapStateToProps)(Quote);\r\nexport const ShareQuoteContainer = connect(mapStateToProps)(ShareQuote);\r\nexport const AppWrapperContainer = connect(mapStateToProps)(AppWrapper);\r\n","import './App.css';\nimport { Provider } from 'react-redux';\nimport {store} from './store';\nimport { AppWrapperContainer } from './store';\n\n\nfunction App() {\n  return (  \n    <Provider store={store}>  \n      <AppWrapperContainer />\n    </Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}